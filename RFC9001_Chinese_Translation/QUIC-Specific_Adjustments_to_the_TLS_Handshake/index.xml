<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>8. QUIC中对TLS握手的调整 on Autumn Navigation</title>
    <link>/RFC9001_Chinese_Translation/QUIC-Specific_Adjustments_to_the_TLS_Handshake/</link>
    <description>Recent content in 8. QUIC中对TLS握手的调整 on Autumn Navigation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language><atom:link href="/RFC9001_Chinese_Translation/QUIC-Specific_Adjustments_to_the_TLS_Handshake/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>8.1. 协议协商</title>
      <link>/RFC9001_Chinese_Translation/QUIC-Specific_Adjustments_to_the_TLS_Handshake/8.1_Protocol_Negotiation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9001_Chinese_Translation/QUIC-Specific_Adjustments_to_the_TLS_Handshake/8.1_Protocol_Negotiation/</guid>
      <description>QUIC要求加密握手提供经认证的协议协商过程。TLS使用应用层协议协商（ALPN，详见《ALPN》）来选择应用协议。终端必须使用ALPN来协商应用协议，除非使用了其他机制来就应用协议达成一致。
在使用ALPN时，如果没有协商出应用协议，那么终端必须立即使用值为no_application_protocol（无应用协议）的TLS警告（QUIC的错误码为0x0178；详见第4.8章）来关闭连接（详见《QUIC传输》的第10.2章）。尽管《ALPN》中只规定了服务器要使用此警告，但是QUIC客户端在ALPN协商失败时必须使用类型为0x0178的错误来终止连接。
应用协议可以限制它所操作的QUIC版本。服务器必须选择一个与客户端所选QUIC版本兼容的应用协议。服务器必须将无法选出兼容的应用协议的情况视作类型为0x0178（相当于no_application_protocol）的连接错误。类似地，客户端必须将服务器选择了不兼容的应用协议的情况视作类型为0x0178的连接错误。</description>
    </item>
    
    <item>
      <title>8.2. QUIC传输参数扩展</title>
      <link>/RFC9001_Chinese_Translation/QUIC-Specific_Adjustments_to_the_TLS_Handshake/8.2_QUIC_Transport_Parameters_Extension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9001_Chinese_Translation/QUIC-Specific_Adjustments_to_the_TLS_Handshake/8.2_QUIC_Transport_Parameters_Extension/</guid>
      <description>QUIC传输参数是使用TLS扩展来传递的。不同的QUIC版本可能为传输配置的协商定义不同方法。
在TLS握手中包含传输参数，就可以为这些值提供完整性保护。
enum { quic_transport_parameters(0x39), (65535) } ExtensionType; 
 quic_transport_parameters（QUIC传输参数）扩展的extension_data（扩展数据）字段中包含的是一个由正在使用的QUIC版本定义的值。
quic_transport_parameters扩展是在握手期间使用ClientHello（客户端问候）和EncryptedExtensions（加密扩展）消息来传递的。终端必须发送quic_transport_parameters扩展；接收到不带quic_transport_parameters扩展的ClientHello消息或EncryptedExtensions消息的终端必须使用类型为0x016d（相当于TLS中致命级别的missing_extension警告，详见第4.8章）的错误来关闭连接。
传输参数在握手完成前就会变为可用。服务器可以在握手完成前就使用这些值。不过，直到握手完成，传输参数的值都是未经认证的，所以即使提前使用这些参数也不要依赖于它们的真实性。任何对于传输参数的篡改最终都会使得握手失败。
终端必须不在并未使用QUIC的TLS连接中（例如在《TLS13》中定义的基于TCP的TLS连接）发送此扩展。如果在非QUIC的传输中接收到了这个扩展，那么支持此扩展的终端必须发送致命级别的unsupported_extension警告。
协商quic_transport_parameters扩展会使得EndOfEarlyData（早期数据结束）被移除；详见第8.3章。</description>
    </item>
    
    <item>
      <title>8.3. 移除EndOfEarlyData消息</title>
      <link>/RFC9001_Chinese_Translation/QUIC-Specific_Adjustments_to_the_TLS_Handshake/8.3_Removing_the_EndOfEarlyData_Message/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9001_Chinese_Translation/QUIC-Specific_Adjustments_to_the_TLS_Handshake/8.3_Removing_the_EndOfEarlyData_Message/</guid>
      <description>QUIC中不会使用TLS的EndOfEarlyData消息。QUIC并不使用这条消息去标记0-RTT数据的结束位置，或去发送握手密钥发生变化的信号。
客户端必须不发送EndOfEarlyData消息。服务器必须将在0-RTT数据包中接收到加密帧的情况视作类型为PROTOCOL_VIOLATION（协议违背）的连接错误。
于是，EndOfEarlyData不会出现在TLS握手的记录单（transcript）中。</description>
    </item>
    
    <item>
      <title>8.4. 禁止TLS的中间设备兼容模式</title>
      <link>/RFC9001_Chinese_Translation/QUIC-Specific_Adjustments_to_the_TLS_Handshake/8.4_Prohibit_TLS_Middlebox_Compatibility_Mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9001_Chinese_Translation/QUIC-Specific_Adjustments_to_the_TLS_Handshake/8.4_Prohibit_TLS_Middlebox_Compatibility_Mode/</guid>
      <description>《TLS13》的附录D.4描述了TLS 1.3握手的一种替代方案，并将之作为某些中间设备上程序出错时的应对措施。TLS 1.3中的这种中间设备兼容模式需要将ClientHello和ServerHello（服务器问候）中的legacy_session_id（兼容会话ID）字段设置为一个32字节长的值，随后发送change_cipher_spec（更改加密设置）记录。这个字段和记录不传递任何具有语义的内容，并且会被忽略。
这个模式在QUIC中没有用处，因为它只适用于会干预基于TCP的TLS的中间设备。同时QUIC也没有提供任何传递change_cipher_spec记录的方法。客户端必须不请求使用TLS 1.3的兼容模式。服务器应该将接收到legacy_session_id字段非空的TLSClientHello的情况视作类型为PROTOCOL_VIOLATION的连接错误。</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2. 标准规范 on Autumn Navigation</title>
    <link>/RFC9001_Chinese_Translation/Notational_Conventions/</link>
    <description>Recent content in 2. 标准规范 on Autumn Navigation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language><atom:link href="/RFC9001_Chinese_Translation/Notational_Conventions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2.1. TLS概述</title>
      <link>/RFC9001_Chinese_Translation/Notational_Conventions/2.1_TLS_Overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9001_Chinese_Translation/Notational_Conventions/2.1_TLS_Overview/</guid>
      <description>TLS为两个终端提供一种经由不受信任的中间人（例如，互联网）建立通信的方法。TLS认证对端的身份并且为终端间交换的信息提供可信度和完整性保护。
TLS在协议内部有着不同的层，它的结构如图1所示。
 TODO：图1
  图1：TLS的层
 每条内容层消息（例如握手、警告和应用数据）都是由记录层将其作为一系列具有类型的TLS记录来传递的。每条记录受到单独的加密保护，然后经由一种可靠的传输方式（通常是TCP）被发送出去，可靠是指它提供了有序且受保证的交付。
在两个终端（客户端和服务器）间会进行TLS认证密钥的交换。交换由客户端发起，服务器则负责响应。如果密钥交换顺利完成，那么客户端和服务器将就一个秘密值达成一致。TLS既支持预共享密钥（PSK），也支持基于有限域或椭圆曲线的迪菲-赫尔曼金密钥交换（(EC)DHE）。预共享密钥是早期数据（0-RTT）的基础；后者在(EC)DHE密钥被销毁时提供前向安全（Forward Secrecy）。还可以组合使用这两种模式，以在使用PSK认证时提供前向安全。
只要完成了TLS握手，客户端就能了解到并验证服务器的身份，而服务器能够可选地去了解和验证客户端的身份。TLS支持使用X.509（详见《RFC5280》）证书来认证服务器和客户端。当使用PSK密钥交换时（在恢复过程中会用到），有关PSK的知识也能帮助验证对端的身份。
TLS密钥交换能抵御攻击者的篡改，并且由它生成的共享秘密值不受任一终端的控制。
TLS提供两种QUIC感兴趣的基本握手模式：
  完整的1-RTT握手，这种情况下客户端可以在单次数据往返后发送应用数据，而服务器可以在接收到来自客户端的首条握手消息后立即作出响应。
  0-RTT握手，这种情况下客户端使用有关服务器的已知信息来立即发送应用数据。这些应用数据可以被攻击者重放，所以0-RTT不适合用来传递被重放后可能引发意外的副作用的指令。
  图2展示的是简化后的发送0-RTT应用数据的TLS握手过程。
 TODO：图2
  图2：使用0-RTT的TLS握手
 图2省略了QUIC不会使用到的EndOfEarlyData（早期数据结束）消息；详见第8.3章。类似地，QUIC也不会使用ChangeCipherSpec（更改加密设置）消息和KeyUpdate（密钥更新）消息。在TLS 1.3中ChangeCipherSpec是冗余的；详见第8.4章。QUIC有自己的密钥更新机制；详见第6章。
多种加密级别被用于保护数据：
  初始密钥
  早期数据（0-RTT）密钥
  握手密钥
  应用数据（1-RTT）密钥
  应用数据只能出现在早期数据和应用数据这两种密级中。握手消息和警告消息可以出现在任一密级。
如果客户端和服务器之间曾进行过通信，那么可以使用0-RTT握手。进行1-RTT握手时，客户端只有在收到所有来自服务器的握手消息后才能发送受保护的应用数据。</description>
    </item>
    
  </channel>
</rss>

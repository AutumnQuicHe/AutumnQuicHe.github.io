<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>13.4.2 ECN验证 on AUTUMN QUICHE</title>
    <link>/RFC9000_Chinese_Translation/Packetization_and_Reliability/Explicit_Congestion_Notification/ECN_Validation/</link>
    <description>Recent content in 13.4.2 ECN验证 on AUTUMN QUICHE</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language><atom:link href="/RFC9000_Chinese_Translation/Packetization_and_Reliability/Explicit_Congestion_Notification/ECN_Validation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>13.4.2.1 接收具有ECN计数的ACK帧</title>
      <link>/RFC9000_Chinese_Translation/Packetization_and_Reliability/Explicit_Congestion_Notification/ECN_Validation/13.4.2.1_Receiving_ACK_Frames_with_ECN_Counts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9000_Chinese_Translation/Packetization_and_Reliability/Explicit_Congestion_Notification/ECN_Validation/13.4.2.1_Receiving_ACK_Frames_with_ECN_Counts/</guid>
      <description>被网络错误地使用的ECN-CE标记会造成连接性能低下。因此接收到具有ECN计数的ACK帧的终端在使用前要验证它们。终端用比较新接收到的计数和那些在最近成功处理了的ACK帧中的计数的方法进行这项验证。任何在ECN计数上的增加都会被验证，这项验证基于被应用到最近在ACK帧中被确认的原始数据包上的ECN标记。
如果一个ACK帧最近确认了一个由终端发送的数据包且这个数据包被设置了ECT(0)或ECT(1)码点，同时相应的ECN计数并未在这个ACK帧中出现，那么ECN验证就会失败。这项检查能够检测出将ECN字段归零的网络元素或并不报告ECN标记的对端。
如果ECT(0)计数和ECN-CE计数的增加量的总和小于被新确认的且发送时具有ECT(0)标记的数据包的数量，那么ECN验证也会失败。类似地，如果ECT(1)计数和ECN-CE计数的增加量的总和小于被新确认的且发送时具有ECT(1)标记的数据包的数量，那么ECN验证也会失败。这些检查可以检测网络重设ECN-CE标记的行为。
在ACK帧有可能丢失的情况下，终端允许忽略对某个数据包的确认。因此ECT(0)、ECT(1)和ECN-CE的增加量的总和大于被一个ACK帧新确认的的数据包数量是有可能的。这就是为什么允许ECN计数大于被确认的数据包的总数。
为经过重排序的ACK帧验证ECN计数，其结果是不准确的。终端必须不因为处理一个没有增加最大已确认数据包号的ACK帧而将ECN验证结果记为失败。
如果接收到的ECT(0)或ECT(1)中任意一个的总计数，超过了已发送的具有的相应ECT码点的数据包总数，ECN验证就会失败。特别是，当终端接收到一个非零的ECN计数但那个相应的ECT码点从未使用过，验证就应失败。这项检查可以检测网络重设数据包的ECT(0)和ECT(1)的行为。</description>
    </item>
    
    <item>
      <title>13.4.2.2 ECN验证结果</title>
      <link>/RFC9000_Chinese_Translation/Packetization_and_Reliability/Explicit_Congestion_Notification/ECN_Validation/13.4.2.2_ECN_Validation_Outcomes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9000_Chinese_Translation/Packetization_and_Reliability/Explicit_Congestion_Notification/ECN_Validation/13.4.2.2_ECN_Validation_Outcomes/</guid>
      <description>如果验证失败，那么终端必须禁用ECN。它在发送的IP数据包中不会再设置ECT码点，就当作网络路径或对端不支持ECN。
即使验证失败，终端也可以在连接中的任意时间对相同的路径重新验证ECN。终端可以继续定期尝试验证。
当验证成功后，终端可以继续在它发送的后续数据包中设置ECT码点，并认定这条路径是支持ECN的。网络路由和路径上的元素可能在连接中途发生变化；将来如果验证失败，则终端必须禁用ECN。</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>13. 分包与可靠性 on Autumn Navigation</title>
    <link>/RFC9000_Chinese_Translation/Packetization_and_Reliability/</link>
    <description>Recent content in 13. 分包与可靠性 on Autumn Navigation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language><atom:link href="/RFC9000_Chinese_Translation/Packetization_and_Reliability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>13.1 数据包处理</title>
      <link>/RFC9000_Chinese_Translation/Packetization_and_Reliability/13.1_Packet_Processing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9000_Chinese_Translation/Packetization_and_Reliability/13.1_Packet_Processing/</guid>
      <description>在数据包保护被成功移除且所有包含在数据包中的帧都被处理之前，必须不确认这个数据包。对于流帧，这个时机指其中的数据已经被置入队列，且准备被应用协议接收之时，但它不要求数据被分发和消费。
一旦数据包已经被完全处理，接收方通过发送一个或多个ACK帧来确认这个数据包的接收，这些ACK帧中包含被接收到的这个数据包的数据包号。
如果终端有能力检测出收到了一个它未发送过的数据包的确认的情况，它应该将这种情况视作一种类型为PROTOCOL_VIOLATION（协议违背）的错误。有关如何做到这件事，详见第21.4章。</description>
    </item>
    
    <item>
      <title>13.3 信息重传</title>
      <link>/RFC9000_Chinese_Translation/Packetization_and_Reliability/13.3_Retransmission_of_Information/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9000_Chinese_Translation/Packetization_and_Reliability/13.3_Retransmission_of_Information/</guid>
      <description>被认定丢包的QUIC数据包不会被整个重传。被丢包的数据包中包含的帧也是这样。取而代之的是这些帧中可能携带的信息会按照需要在新的帧中被再次发送。
携带被认定为丢失的信息时，使用新的帧和数据包。一般来说，信息会在携带它的数据包被认定为丢包时被再次发送，同时当携带那个信息的数据包被确认时发送即停止。
  在加密帧中的数据按照《QUIC恢复》中的规则重新传输，直到所有数据都已被确认。当有关数据包号空间的密钥被弃用时，初始数据包和握手数据包的加密帧中的数据会被丢弃。
  原本在流帧中发送的应用数据会在新的流帧被重传，除非终端已经为那条流发送了流重置帧。一旦终端发送了流重置帧，就不再需要发送流帧。
  ACK帧携带最近的一系列确认和来自最大已确认数据包的确认延迟，如第13.2.1章所述。延误包含ACK帧的数据包的传输或重发旧的ACK帧会使得对端生成过高的RTT样本或不必要地禁用ECN。
  流传输的中止信息只有在携带它的流重置帧被确认前且在所有流数据都被对端确认（也就是流的发送方进入“重置接收”或“接收完成”状态）前才能被发送。当再次发送时必须不改变流重置帧的内容。
  类似地，被编码在停止发送帧帧中的取消流传输的请求，只有在流的接收方进入“接收完成”或“重置接收”状态前才能被发送，详见第3.5章。
  当数据包丢包被检测到时，连接关闭的信号，包括那些包含连接关闭帧的数据包，不会被再次发送。有关重发这些信号，详见第10章。
  当前连接的最大数据量是使用最大数据量帧发送的。如果包含最近发送的最大数据量帧的数据包被认定丢包或终端决定更新限制，那么更新后的值还是使用最大数据量帧发送。由于限制可以被频繁提高而造成大量不必要的最大数据量帧被发送出去，必须小心以避免过于频繁地发送这种帧，详见第4.2章。
  当前最大流数据偏移量是使用最大流数据量帧发送的。像最大数据量帧一样，如果包含最近的最大流数据量帧的数据包遭遇丢包或限制被更新，那么就要发送更新后的值，并且小心以避免过于频繁地发送此类帧。当流的接收方进入“数据量确认”或“重置接收”状态时，终端应该不再发送最大流数据量帧。
  对给定类型的流的限制是使用最大流帧发送的。像最大数据量帧一样，如果对于给定的流类型，包含其最近的最大流帧的数据包被认定丢包或限制被更新，那么就要发送更新后的值，并且小心以避免过于频繁地发送此类帧。
  阻塞信号是在流阻塞帧、流数据阻塞帧和流阻塞帧中被携带的。流阻塞帧是连接层面上的，流数据阻塞帧是流层面上的，而流阻塞帧是在某种特定的流层面上的。当包含某一层面上的最近的上述帧的数据包遭遇丢包且仅当终端被阻塞于相应限制时，才发送一个新的帧。这些帧总是包含那个引起阻塞的限制在这些帧被传输时的值。
  使用通道挑战帧的存活确认或路径验证检查每隔一段时间被发送一次，直到接收到与之匹配的回复通道帧或已经没有必要再做存活确认或路径验证检查。每次发送通道挑战帧时都使用不同的载荷。
  响应路径验证时使用回复通道帧且仅发送一次。对端应当根据需要发送更多通道挑战帧来唤起额外的回复通道帧。
  新的连接ID是使用新连接ID帧发送的，如果包含它们的数据包遭遇丢包，依旧用这种帧重传。这种帧重传时携带相同序列数值。类似地，撤销连接ID的信息是在撤销连接ID帧中被发送的，如果包含它们的数据包遭遇丢包，依旧用这种帧重传。
  新令牌帧在包含它们的数据包遭遇丢包时会被重传。除了直接比较帧的内容之外，没有提供特殊的方法来检测乱序和重复的新令牌帧。
  Ping帧和填充帧不包含信息，因此丢失的这两种帧不需要修复。
  握手完成帧必须被重传，除非它已经被确认了。
  终端应该使数据重传优先于新数据发送，除非应用指定的优先级表明了相反的策略，详见第2.3章。
尽管鼓励发送方每次发送数据包时都使用最新的信息来装配帧，但是重传从丢包的数据包中拷贝来的帧数据这一行为并未被禁止。重传帧拷贝的发送方需要解决可用载荷大小上的降低，这是由数据包号长度、连接ID长度和路径MTU上的变化引起的。如果一个数据包包含了过时的帧，比如一个携带着比先前数据包中的值更小的最大数据量的最大数据量帧，那么接收方必须接收它们。
只要数据包已经被确认，发送方就应该避免重传来自这些数据包的信息。这包含数据包在被认定为丢包后又被确认的情况，这种情况会因为网络重排序而发生。这么做需要发送方在数据包被认定为丢包后保留有关它们的信息。发送方可以在丢弃此信息前保留一段足以允许重排序的时间，例如一个PTO（详见《QUIC恢复》的第6.2章），或基于其他事件做决定，例如到达内存限制。
在丢包检测时，发送方必须采取合适的拥塞控制措施。有关丢包检测和拥塞控制的细节，详见《QUIC恢复》。</description>
    </item>
    
  </channel>
</rss>

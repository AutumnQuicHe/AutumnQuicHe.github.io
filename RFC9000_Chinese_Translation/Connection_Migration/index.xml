<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>9. 连接迁移 on Autumn Navigation</title>
    <link>/RFC9000_Chinese_Translation/Connection_Migration/</link>
    <description>Recent content in 9. 连接迁移 on Autumn Navigation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language><atom:link href="/RFC9000_Chinese_Translation/Connection_Migration/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>9.1 探测新路径</title>
      <link>/RFC9000_Chinese_Translation/Connection_Migration/9.1_Probing_a_New_Path/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9000_Chinese_Translation/Connection_Migration/9.1_Probing_a_New_Path/</guid>
      <description>在将连接迁移到新的本地地址前，终端可以使用地址验证（详见第8.2章）从新的本地地址探测对端的可达性。地址验证的失败仅仅意味着新路径对此条连接来说无法使用。地址验证的失败不会引起连接被关闭，除非不存在其他可替代的有效路径。
通道挑战帧、回复通道帧、新连接ID帧和填充帧都属于“探测帧”，而其他类型的帧都是“非探测帧”。仅仅包含探测帧的数据包是“探测数据包”，而包含了其他类型的帧的数据包就是“非探测数据包”。</description>
    </item>
    
    <item>
      <title>9.2 发起连接迁移</title>
      <link>/RFC9000_Chinese_Translation/Connection_Migration/9.2_Initiating_Connection_Migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9000_Chinese_Translation/Connection_Migration/9.2_Initiating_Connection_Migration/</guid>
      <description>终端可以通过从新的本地地址发送包含非探测帧的数据包的方式来迁移连接。
每个终端都会在连接建立期间验证对端的地址。因此，正在迁移的终端可以在知道对端在其当前地址上愿意接收数据的前提下向对端发送数据。于是，终端不需要先验证对端的地址就可以迁移至新的本地地址。
为了在新的路径上建立可达性，终端在新路径上发起路径验证（详见第8.2章）。终端可以推迟路径验证，直到对端向它的新地址发送下一个非探测帧之时。
在迁移时，新路径可能不支持终端当前的发送速率。因此，终端如第9.4章所描述的那样重置它的拥塞控制器和RTT预估。
新的路径可能不具有相同的ECN功能。因此，终端如第13.4章所描述的那样验证ECN功能。</description>
    </item>
    
    <item>
      <title>9.4 丢包检测和拥塞控制</title>
      <link>/RFC9000_Chinese_Translation/Connection_Migration/9.4_Loss_Detection_and_Congestion_Control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9000_Chinese_Translation/Connection_Migration/9.4_Loss_Detection_and_Congestion_Control/</guid>
      <description>新路径上的可用功能可能和旧路径上的不一样。在旧路径上发送的数据包必须不被计入新路径的拥塞控制或RTT预估中。
当承认对端对它新地址的所有权时，终端必须立即将新路径的拥塞控制器和往返时间预估器重置为初始值（详见《QUIC恢复》的附录A.3和附录B.3），除非对端地址的改变仅仅是换了个端口。因为仅改变端口通常是NAT重绑定或其他中间设备活动的结果，终端在这种情况下可以沿用拥塞控制状态和往返时间预估，而不是将它们重置为初始值。在来自旧路径的拥塞控制状态被沿用至具有完全不同特征的新路径上时，发送方一开始可能传输得过于激进，直到拥塞控制器和RTT预估器适应下来为止。一般来说，建议QUIC实现在沿用旧值至新路径时要谨慎。
在迁移期间，当终端发送数据和探测包自/至不同地址时，接收方一侧可能出现很明显的乱序，这是因为使用两条不同路径会有不同的往返时间。来自不同路径上的数据包的接收方仍然要为所有接收到的数据包发送ACK帧。
尽管在连接迁移期间会用到多条路径，但是最少只要使用单个拥塞控制上下文和单个丢包恢复上下文（如《QUIC恢复》中所述）就足够应对了。比如，终端可以推迟切换至新的拥塞控制上下文，直到它确认不再需要旧路径（就像第9.3.3章中描述的情形一样）。
发送方可以将探测数据包视作特例，以使得它们的丢包检测是独立的且不会使得拥塞控制器过度地抑制它的发送速率。当发送通道挑战帧时，终端可以设置一个单独的倒计时，并当相应的回复通道帧被接收到时取消倒计时。如果倒计时在回复通道帧前归零，终端可以发送一个新的通道挑战帧并且启动一个时间更长的倒计时。这个倒计时应该如《QUIC恢复》的第6.2.1章描述的那样被设置，并且必须不变得越来越严格。</description>
    </item>
    
    <item>
      <title>9.5 连接迁移对隐私的影响</title>
      <link>/RFC9000_Chinese_Translation/Connection_Migration/9.5_Privacy_Implications_of_Connection_Migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9000_Chinese_Translation/Connection_Migration/9.5_Privacy_Implications_of_Connection_Migration/</guid>
      <description>在不同网络路径上使用相同的连接ID将允许被动观测者从那些路径上将网络活动互相关联起来。在不同网络间移动的终端可能不希望它们的网络活动被不是对端的任何实体给关联起来，所以当从不同的本地地址发送时，会使用不同的连接ID，如第5.1章所讨论的那样。为了使这个方法有效，终端应该确保它们提供的那些连接ID不会被任何其他实体找出相关性。
终端随时可以改变传输时所用的目标连接ID为一个从未在别的路径上使用过的值。
当发送自不止一个本地地址时——例如在如第9.2章所描述的发起连接迁移时或在如第9.1章所描述的探测新网络路径时——终端必须不重用连接ID。
类似地，当发送至不止一个目标地址时，终端必须不重用连接ID。由于不受对端控制的网络条件变化，终端可能从一个新的源地址接收到具有相同目标连接ID字段值的数据包，这时它可以在使用新的远程地址时继续使用当前连接ID，但是仍然从相同的本地地址发送。
以上有关重用连接ID的要求仅适用于数据包发送，因为数据包发送时的连接ID不变但是数据包传输的路径发生意想不到的变化的情况是有可能的。例如，在网络经过一段时间的沉默后，客户端恢复发送时，NAT重绑定可能使得数据包在一条新路径上被发送。终端如第9.3章所描述的那样响应这类事件。
为每条新网络路径上双向发送的数据包使用不同的连接ID消除了连接ID对于从不同网络路径中的相同连接间将数据包互相关联的作用。而头部保护确保了数据包号不能被用来关联网络活动。但这无法阻止数据包的其他属性，例如计时和尺寸，被用于关联网络活动。
终端不应该在对端申请了零长度连接ID时发起迁移，因为经过新路径的流量与经过旧路径的会很容易地被关联起来。如果服务器有能力将具有零长度连接ID的数据包与正确的那条连接关联起来，那么这就意味着服务器正使用其他信息来解除数据包的多路复用。举个例子，服务器可以给每个客户端提供唯一的地址——比如通过使用HTTP替代服务（详见《ALTSVC》）。这类能允许不同网络路径上的数据包被正确路由的信息同样能允许非对端的实体关联这些路径上的网络活动。
在沉默一段时间后，客户端在发送流量时可能希望通过切换至新连接ID、源UDP端口或IP地址（详见《RFC8981》）的方法减少网络活动的可关联性。改变用来发送数据包的地址同时会使得服务器检测到连接迁移。这确保了用于支持迁移的机制即使是对没有经历NAT重绑定或实际迁移的客户端来说也是用得上的。改变地址会使得对端重置它的拥塞控制状态（详见第9.4章），所以地址应该仅偶尔地被改变。
耗尽可用连接ID的终端既不能探测新路径或发起迁移，也不能响应探测包或对端发起的迁移。为了确保迁移可行并且在不同路径上发送的数据包不会被关联，终端应该在对端迁移前提供新连接ID，详见第5.1.1章。如果对端可能已经耗尽了可用的连接ID，正在迁移的那个终端可以在所有在新网络路径上发送的数据包中包含一个新连接ID帧。</description>
    </item>
    
    <item>
      <title>9.7 迁移与IPv6流标签的使用</title>
      <link>/RFC9000_Chinese_Translation/Connection_Migration/9.7_Use_of_IPv6_Flow_Label_and_Migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9000_Chinese_Translation/Connection_Migration/9.7_Use_of_IPv6_Flow_Label_and_Migration/</guid>
      <description>使用IPv6发送数据的终端应该应用符合《RFC6437》要求的IPv6流标签，除非本地API不允许设置IPv6流标签。
流标签的生成必须被设计得能够最小化被关联到之前使用过的流标签的可能性，因为固定的流标签将使得多条路径上的网络活动被关联起来，详见第9.5章。
《RFC6437》建议用伪随机函数衍生数据的方式来生成流标签。在生成流标签时除了源地址和目标地址外还包含目标连接ID字段，可以确保流标签和其他能观测到的标识值是同步变化的。使用将这些输入和一个本地秘密值进行组合的加密哈希函数是实现这项要求的方法之一。</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>17.3 短包头数据包 on Autumn Navigation</title>
    <link>/RFC9000_Chinese_Translation/Packet_Formats/Short_Header_Packets/</link>
    <description>Recent content in 17.3 短包头数据包 on Autumn Navigation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language><atom:link href="/RFC9000_Chinese_Translation/Packet_Formats/Short_Header_Packets/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>17.3.1 1-RTT数据包</title>
      <link>/RFC9000_Chinese_Translation/Packet_Formats/Short_Header_Packets/17.3.1_1-RTT_Packet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/RFC9000_Chinese_Translation/Packet_Formats/Short_Header_Packets/17.3.1_1-RTT_Packet/</guid>
      <description>1-RTT数据包使用短数据包包头。它在协商出版本和1-RTT密钥之后被使用。
1-RTT数据包 { 包头形式 (1) = 0, 固定比特位 (1) = 1, 自旋比特位 (1), 保留比特位 (2), 密钥阶段 (1), 数据包号长度 (2), 目标连接ID (0..160), 数据包号 (8..32), 数据包载荷 (8..), } 图19：1-RTT数据包
 1-RTT数据包包含以下字段：
 包头形式（Header Form）：  对于短包头，字节0的最高有效位（0x80）被设置为0。
 固定比特位（Fixed Bit）：  字节0中的下一个比特位（0x40）被设置为1。此比特位为0的数据包表示它不是当前版本的合法数据包且必须被丢弃。此比特位为1允许QUIC与其他协议共存，详见《RFC7983》。
 自旋比特位（Spin Bit）：  字节0的第三高有效比特位（0x20）是延迟自旋比特位，按第17.4章中描述的那样去设置。
 保留比特位（Reserved Bits）：  字节0中的后两个比特位（掩码为0x18的那两个）被保留使用。这些比特位被头部保护所保护，详见《QUIC-TLS》的第5.4章。在进行保护前，这两个比特位的值必须被设置为0。若在移除数据包保护和头部保护之后发现这些位被设置为非零值，则接收到该数据包的终端必须将该情况视作一个类型为PROTOCOL_VIOLATION的连接错误。仅在移除头部保护后就丢弃这样的数据包会使终端暴露于攻击之下，详见《QUIC-TLS》的第9.5章。
 密钥阶段（Key Phase）：  字节0中的下一个比特位（0x04）表明了密钥阶段，它允许数据包的接收方辨别用于保护数据包的数据包保护密钥。有关细节见《QUIC-TLS》。这个比特位被头部保护所保护，详见《QUIC-TLS》的第5.4章。
 数据包号长度（Packet Number Length）：  在包含数据包号字段的数据包类型中，字节0最低的两个有效位（掩码为0x03的那两个）包含数据包号字段的长度。该长度被编码为一个2位无符号整型值，这个值比数据包号字段的字节长度小1。也就是说，数据包号字段的长度等于这个字段的值加1。这些比特位被头部保护所保护，详见《QUIC-TLS》的第5.4章。
 目标连接ID（Destination Connection ID）：  目标连接ID是一个由此数据包意图的接收方选择的一个连接ID，详见第5.1章。
 数据包号（Packet Number）：  这个字段的长度是1至4字节。数据包号被头部保护所保护，详见《QUIC-TLS》的第5.</description>
    </item>
    
  </channel>
</rss>
